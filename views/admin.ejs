<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        .logout-button {
            position: absolute;
            top: 10px;
            right: 10px;
        }
        .custom-col {
            padding-right: 5px;
            padding-left: 5px;
        }
    </style>
</head>
<body>
    <% if (showLoginForm) { %>
        <!-- Render the login form -->
        <div class="d-flex justify-content-center">
            <div class="text-center">
                <h1>Admin Login</h1>
            </div>
        </div>
        <div class="d-flex justify-content-center align-items-center" style="height: 80vh;">
            <div>
                <% if (error) { %>
                    <p class="text-danger"><%= error %></p>
                <% } %>
                <form method="post" action="/admin">
                    <div class="form-group row">
                        <label for="username" class="col-sm-3 col-form-label">Username:</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="username" name="username" placeholder="Enter your username" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="password" class="col-sm-3 col-form-label">Password:</label>
                        <div class="col-sm-9">
                            <input type="password" class="form-control" id="password" name="password" placeholder="Enter your password" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-9 offset-sm-3">
                            <button type="submit" class="btn btn-primary">Log in</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    <% } else { %>
        <!-- Render the admin page -->
        <div class="d-flex justify-content-center" style="height: 50vh;">
            <div class="text-center">
                <h1>Admin Portal</h1>
                <p>Welcome, <%= user.username %></p>
            </div>
        </div>
        <div class="logout-button">
            <button id="logout" class="btn btn-danger">Logout</button>
        </div>
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-3 d-flex flex-column align-items-end py-2 custom-col">
                    <button id="shutdown-server" class="btn btn-primary mb-2">Shutdown</button>
                    <button id="manage-users" class="btn btn-primary mb-2">Manage Users</button>
                    <button id="check-updates" class="btn btn-primary mb-2">Check for updates</button>
                </div>
                <div class="col-md-3 d-flex flex-column align-items-start py-2 custom-col">
                    <button id="restart-server" class="btn btn-primary mb-2">Restart</button>
                    <button id="clear-logs" class="btn btn-primary mb-2">Clear Logs</button>
                    <button id="rebuild-dictionaries" class="btn btn-primary mb-2">Rebuild dictionaries</button>
                </div>
            </div>
        </div>
        <!-- Render the log box -->
        <div class="mt-5">
            <div class="d-flex justify-content-center">
                <h2>Server Logs</h2>
            </div>
            <div style="background-color: #f8f9fa; border: 1px solid #ced4da; padding: 15px; overflow: auto; max-height: 200px;">
                <pre id="logs"><%= logs %></pre>
            </div>
        </div>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            // #region Log box code
            // Function to color a log message and add it to the log box
            function addLogMessage(data) {
                // Split the log message into the log level tag and the rest of the message
                var tag = data.substring(0, data.indexOf(']') + 1);
                var message = data.substring(data.indexOf(']') + 1);
                // Create a new span element for the log level tag
                var span = document.createElement('span');
                span.textContent = tag;
                // Set the color of the span element based on the log level
                if (tag.includes('[INFO]')) {
                    span.style.color = '#259C25';
                } else if (tag.includes('[WARN]')) {
                    span.style.color = '#FFA500';
                } else if (tag.includes('[ERROR]')) {
                    span.style.color = 'red';
                }
                // Append the span element and the rest of the message to the log box
                var logBox = document.querySelector('#logs');
                logBox.appendChild(span);
                logBox.appendChild(document.createTextNode(message + '\n'));
                // Scroll to the bottom of the log box
                logBox.parentElement.scrollTop = logBox.parentElement.scrollHeight;
            }
            // Initial setup for the log box
            var socket = io();
            // Color each line in the initial text and add it to the log box
            var initialText = document.querySelector('#logs').textContent.trim().split('\n');
            document.querySelector('#logs').textContent = '';
            for (var i = 0; i < initialText.length; i++) {
                addLogMessage(initialText[i]);
            }
            // Scroll to the bottom of the log box
            document.querySelector('#logs').parentElement.scrollTop = document.querySelector('#logs').parentElement.scrollHeight;
            // Listen for a message from the server, then append it to the log box
            socket.on('log update', addLogMessage);
            // #endregion

            // #region Button click event listeners
            document.querySelector('#logout').addEventListener('click', function() {
                fetch('/admin/logout', { method: 'POST' })
                .then(() => {
                    window.location.href = '/admin';
                });
            });
            document.querySelector('#check-updates').addEventListener('click', function() {
                fetch('/admin/check-updates', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.hasUpdates) {
                        if (confirm('Updates are available. Do you want to apply them? This will restart the server.')) {
                            fetch('/admin/apply-updates');
                        }
                    } else {
                        alert('No updates available.');
                    }
                });
            });
            document.querySelector('#shutdown-server').addEventListener('click', function() {
                if (confirm('Are you sure you want to shut down the server?')) {
                    fetch('/admin/shutdown', { method: 'POST' });
                }
            });
            document.querySelector('#restart-server').addEventListener('click', function() {
                if (confirm('Are you sure you want to restart the server?')) {
                    fetch('/admin/restart', { method: 'POST' });
                }
            });
            document.querySelector('#manage-users').addEventListener('click', function() {
                window.location.href = '/admin/users';
            });
            document.querySelector('#clear-logs').addEventListener('click', function() {
                if (confirm('Are you sure you want to clear the logs?')) {
                    document.querySelector('#logs').textContent = '';
                    fetch('/admin/clear-logs', { method: 'POST' });
                }
            });
            document.querySelector('#rebuild-dictionaries').addEventListener('click', function() {
                fetch('/admin/rebuild-dictionaries', { method: 'POST' });
            });
            // #endregion

        </script>
    <% } %>
</body>
</html>